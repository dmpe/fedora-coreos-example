variant: fcos
version: 1.5.0-experimental
passwd:
  users:
    - name: core
      home_dir: /home/core
      password_hash: $y$j9T$e3bd2nu78GmscX993ax1y.$UTWNgF0bn/3LrA/0LYl5LwtnQU46crCjKE13eWEv6Z.
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKtfFkj3QCQavxs+iek1BvguMoy2/db4/DFqgd3WceaJ jm@jm
    - name: rancher
      home_dir: /home/rancher
      groups: # adds 'rancher' user to root group
        - docker
        - sudo
        - wheel
      shell: /bin/bash
      password_hash: $y$j9T$e3bd2nu78GmscX993ax1y.$UTWNgF0bn/3LrA/0LYl5LwtnQU46crCjKE13eWEv6Z.
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKtfFkj3QCQavxs+iek1BvguMoy2/db4/DFqgd3WceaJ jm@jm
extensions:
  - name: "firewalld"
  - name: "perl"
  - name: "open-vm-tools"
  - name: "rke2-selinux"
  - name: "policycoreutils-python-utils"
  - name: "rke2-common" # not installable with existing rke2 repo
systemd:
  units:
    - name: podman.service
      enabled: false
      mask: true
    - name: nm-cloud-setup.service
      enabled: false
      mask: true
    - name: nm-cloud-setup.timer
      enabled: false
      mask: true
    - name: docker.service
      enabled: true
    - name: zincati.service
      enabled: false
      mask: true
    - name: rpm-ostree-countme.timer # telemetry
      enabled: false
      mask: true
    - name: iscsid.service
      enabled: true
    - name: multipathd.service
      enabled: true
    - name: iscsi.service
      enabled: true
    - name: NetworkManager-wait-online.service
      enabled: false
      mask: true
    - name: firewalld.service
      enabled: true
storage:
  directories:
    - path: /etc/yum.repos.d # remove this directory
      overwrite: true
  files:
    - path: /etc/iscsi/iscsid.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          iscsid.startup = /bin/systemctl start iscsid.socket iscsiuio.socket
          node.startup = automatic
          node.leading_login = No
          node.session.timeo.replacement_timeout = 120
          node.conn[0].timeo.login_timeout = 15
          node.conn[0].timeo.logout_timeout = 15
          node.conn[0].timeo.noop_out_interval = 5
          node.conn[0].timeo.noop_out_timeout = 5
          node.session.err_timeo.abort_timeout = 15
          node.session.err_timeo.lu_reset_timeout = 30
          node.session.err_timeo.tgt_reset_timeout = 30
          node.session.initial_login_retry_max = 8
          node.session.cmds_max = 128
          node.session.queue_depth = 32
          node.session.xmit_thread_priority = -20
          node.session.iscsi.InitialR2T = No
          node.session.iscsi.ImmediateData = Yes
          node.session.iscsi.FirstBurstLength = 262144
          node.session.iscsi.MaxBurstLength = 16776192
          node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144
          node.conn[0].iscsi.MaxXmitDataSegmentLength = 0
          discovery.sendtargets.iscsi.MaxRecvDataSegmentLength = 32768
          node.conn[0].iscsi.HeaderDigest = None
          node.session.nr_sessions = 1
          node.session.reopen_max = 0
          node.session.iscsi.FastAbort = Yes
          node.session.scan = manual
          node.session.auth.chap_algs = MD5
    - path: /etc/multipath.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          defaults {
            user_friendly_names yes
            find_multipaths no
          }

          blacklist {
          }
    - path: /etc/yum.repos.d/onprem-fedora.repo
      mode: 0644
      contents:
        inline: |
          [fedora]
          name=Fedora $releasever - $basearch
          metalink=https://mirrors.fedoraproject.org/metalink?repo=fedora-$releasever&arch=$basearch
          enabled=1
          countme=1
          metadata_expire=7d
          repo_gpgcheck=0
          type=rpm
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch
          skip_if_unavailable=False
          [updates]
          name=Fedora $releasever - $basearch - Updates
          metalink=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f$releasever&arch=$basearch
          enabled=1
          countme=1
          repo_gpgcheck=0
          type=rpm
          gpgcheck=1
          metadata_expire=6h
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch
          skip_if_unavailable=False
          [rancher-rke2-common-latest]
          name=Rancher RKE2 Common Latest
          baseurl=https://rpm.rancher.io/rke2/latest/common/centos/8/noarch
          enabled=1
          gpgcheck=1
          gpgkey=https://rpm.rancher.io/public.key
          [updates-archive]
          name=Fedora $releasever - $basearch - Updates Archive
          baseurl=https://fedoraproject-updates-archive.fedoraproject.org/fedora/$releasever/$basearch/
          enabled=1
          metadata_expire=6h
          repo_gpgcheck=0
          type=rpm
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch
          skip_if_unavailable=True
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: hostname
    - path: /etc/sysctl.d/20-silence-audit.conf
      mode: 0644
      contents:
        inline: |
          # Raise console message logging level from DEBUG (7) to WARNING (4)
          # to hide audit messages from the interactive console
          kernel.printk=4
    # - path: /etc/systemd/zram-generator.conf
    #   mode: 0644
    #   contents:
    #     inline: |
    #       # This config file enables a /dev/zram0 device with the default settings
    #       [zram0]
    - path: /home/rancher/1_setup.sh
      mode: 0775
      contents:
        inline: |
          #!/bin/bash
          
          if ! type kubectl &> /dev/null; then
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo mv kubectl /usr/local/bin/kubectl
            sudo chmod +x /usr/local/bin/kubectl
            kubectl completion bash > /home/rancher/kubectl
            echo 'source <(kubectl completion bash)' >>~/.bashrc
            echo 'alias k=kubectl' >>~/.bashrc
            echo 'complete -F __start_kubectl k' >>~/.bashrc
            sudo mv /home/rancher/kubectl /etc/bash_completion.d/kubectl
          fi 
          
          if ! type helm &> /dev/null; then
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            sudo chmod 700 get_helm.sh
            sudo ./get_helm.sh
            sudo rm -rf ./get_helm.sh
            helm completion bash > /home/rancher/helm
            sudo mv /home/rancher/helm /etc/bash_completion.d/helm
          fi

          curl -LOJ https://github.com/rancher/rke2-selinux/releases/download/v0.10.testing.1/rke2-selinux-0.10-1.el8.noarch.rpm

          # nfs-utils-coreos is already provided -> https://github.com/coreos/fedora-coreos-tracker/issues/572
          sudo rpm-ostree install firewalld perl man \
            open-vm-tools tree git lsscsi rke2-selinux-0.10-1.el8.noarch.rpm

          sudo rm -rf ./rke2-selinux-0.10-1.el8.noarch.rpm
          sudo reboot
    - path: /home/rancher/2_setup.sh
      mode: 0775
      contents:
        inline: |
          #!/bin/bash

          sudo firewall-cmd --permanent --zone=public --add-port=22/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=80/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=443/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=2376/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=2379/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=2380/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=6443/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=8472/udp
          sudo firewall-cmd --permanent --zone=public --add-port=9099/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=9345/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=10250/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=10254/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=30000-32767/tcp
          sudo firewall-cmd --permanent --zone=public --add-port=30000-32767/udp

          sudo firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 99 -o cali+ -j ACCEPT
          sudo firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 99 -i cali+ -j ACCEPT
          sudo firewall-cmd --direct --add-rule ipv4 filter FORWARD 99 -o cali+ -j ACCEPT
          sudo firewall-cmd --direct --add-rule ipv4 filter FORWARD 99 -i cali+ -j ACCEPT
          sudo firewall-cmd --reload
          
          sudo systemctl restart firewalld.service
          sudo systemctl restart docker.service
          sudo systemctl restart NetworkManager
          sudo reboot
    - path: /home/rancher/3_rke2.sh # https://docs.rke2.io/install/quickstart/
      mode: 0775
      contents:
        inline: |
          #!/bin/bash
          curl -sfL https://get.rke2.io | sudo sh -
          sudo systemctl enable rke2-server.service
          sudo systemctl start rke2-server.service

          helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm fetch rancher-latest/rancher
          helm fetch jetstack/cert-manager --version v1.7.1
          helm template cert-manager ./cert-manager-v1.7.1.tgz --output-dir . \
              --namespace cert-manager \
              --set image.repository=quay.io/jetstack/cert-manager-controller \
              --set webhook.image.repository=quay.io/jetstack/cert-manager-webhook \
              --set cainjector.image.repository=quay.io/jetstack/cert-manager-cainjector
          curl -L -o cert-manager/cert-manager-crd.yaml https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml
          
          
          sleep 60
          kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml create namespace cert-manager
          kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -f cert-manager/cert-manager-crd.yaml
          kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -R -f cert-manager/templates/

          kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml create namespace cattle-system
          helm template rancher ./rancher-2.7.0.tgz --output-dir . \
              --no-hooks \
              --namespace cattle-system \
              --set bootstrapPassword="rancher" \
              --set hostname=rancher.localhost \
              --set certmanager.version=1.7.1 \
              --set rancherImage=rancher/rancher \
              --set useBundledSystemChart=true \
              --set ingress.tls.source=rancher \
              --set replicas=1
          sleep 10
          kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml -n cattle-system apply -R -f ./rancher
    - path: /etc/rancher/rke2/config.yaml
      mode: 0777
      contents:
        inline: |
          selinux: false # selinux is currently not working
          write-kubeconfig-mode: "0644"
          disable-cloud-controller: true
    - path: /etc/NetworkManager/conf.d/rke2-canal.conf
      mode: 0600
      contents:
        inline: |
          [keyfile]
          unmanaged-devices=interface-name:cali*;interface-name:flannel*
