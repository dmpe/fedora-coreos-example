{
  "ignition": {
    "version": "3.3.0"
  },
  "passwd": {
    "users": [
      {
        "groups": [
          "docker",
          "sudo",
          "wheel"
        ],
        "homeDir": "/home/core",
        "name": "core",
        "passwordHash": "$y$j9T$e3bd2nu78GmscX993ax1y.$UTWNgF0bn/3LrA/0LYl5LwtnQU46crCjKE13eWEv6Z.",
        "shell": "/bin/bash"
      },
      {
        "groups": [
          "docker",
          "sudo",
          "wheel"
        ],
        "homeDir": "/home/rancher",
        "name": "rancher",
        "passwordHash": "$y$j9T$e3bd2nu78GmscX993ax1y.$UTWNgF0bn/3LrA/0LYl5LwtnQU46crCjKE13eWEv6Z.",
        "sshAuthorizedKeys": [
          "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPyOrTl3ywl/WNQW2ag1G4JZBxewcMwZHYmCvkXF9tYY jm@jm2",
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCuLxsBsAx2QQP4XiPpdsbnbEIxuu2sS1aAXzw3eNYmC8eY+pR2ek5DDu+XwmYw8Jd26ayAeFhEj+QVXaG6nx/XLKmKUWFvjljPwkqT7MJq+3HdjdsPJ/GWabxxVu9rqB/cRiropX7HB7csDoKYQzdizxIN1qy4YyFJueLl/VXhx1ribsIo40LivAMSh+cuGrSzOTBPEsxk1RFsjTQNGkjhByPfNeIUkLRn8bKEeHy8rREfo9EypJdemyyL8phKXFijDruogXuJV2Qr0KJbstJuH3UZAagzOTSG6oY5cQ/RRx4pLL1YPfQ/8YkFNcuiL05YpLDvrYOPOL2SAcTQMjDOZayaLot+qQCqisuokgO9sqOwUIcx4XhubQvc2+puYmzIi+CZYIT5/62tOBpT+qBm/2bD0mEQKfpgodCy/vDSlVp0eqKA9K1UQ5VxbHrEJISTdcWy5Kg655KH90jm//HA54OQIIWkLHwbw7va0YmfF+9xgOYphTu5KlWPJVSv/Fc= jm@jm"
        ],
        "shell": "/bin/bash"
      }
    ]
  },
  "storage": {
    "directories": [
      {
        "overwrite": true,
        "path": "/etc/yum.repos.d"
      }
    ],
    "files": [
      {
        "path": "/etc/yum.repos.d/onprem-fedora.repo",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/9yUT4vbMBDF7/oUgl16U8a5tBAQpYfdPZSFpbSHspQwsca2atkSIzlNvn1x7Gy8f6C7IW0hN2Uyem80P57vCzKe8YdosSF9vfshL5kcYaQ1sVTycoWRkPNKXPSnjp2uUgoLAON/tc6jmdEGm+AIQreCQRCcbbsNjEIRJpJwtSbepsq2JTxog48gGkrobFvv9OMCoLHMnuNs0Azsf1KeZp5L2Ld+ZApeD/+ricm7XlQfRqcWV46Mnovcd21qSM93dgYTLmkTLJP+YESvtixDmVeU1zoTaRtIc2jEQ23eH2va6sI6WgAApRxCbYFDo8pQwpe7W3Vzd6M+X31Xz+dSh5FibcPSFsuuxTVa18+nr9FFEvddMJgovoqKVPLb0H4En9Hoz3iOZzNaqNHBqOKNmF7D5CnK99W/wDTea7zpHPJjWrdD8W9nabQ5cZDGF51doI5CdfKAPWd2wnTt0Z1PyvZP7Pvsmt74UZSfhmtiiq7f8KPNqicmL+x9xDoFOQF4WOkLS/rfIfjKHYncx6TnWZZl8kIaKrBzSdoo+5L4HQAA//8o6r7aBwgAAA=="
        },
        "mode": 420
      },
      {
        "path": "/etc/hostname",
        "contents": {
          "source": "data:,fcos-node01%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/sysctl.d/20-silence-audit.conf",
        "contents": {
          "source": "data:,%23%20Raise%20console%20message%20logging%20level%20from%20DEBUG%20(7)%20to%20WARNING%20(4)%0A%23%20to%20hide%20audit%20messages%20from%20the%20interactive%20console%0Akernel.printk%3D4%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/systemd/zram-generator.conf",
        "contents": {
          "source": "data:;base64,IyBUaGlzIGNvbmZpZyBmaWxlIGVuYWJsZXMgYSAvZGV2L3pyYW0wIGRldmljZSB3aXRoIHRoZSBkZWZhdWx0IHNldHRpbmdzClt6cmFtMF0K"
        },
        "mode": 420
      },
      {
        "path": "/home/rancher/setup.sh",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/4yQ0a7TMAyG7/cU5sAFCCWZdhBMPAI6EhfcIqE09ZpoTlzZ7jbeHp22mw6gCW5c6ffn+otfvwpdaaGLmjdpEgL39BUestmon0PoyR/36gsHQcKoGN68XSlwCvcxtdgRervYu/n/VNp0CbH2Hz+E49RhMnrY6NQz1BOsAYRJJRCnSPPMGi9YypV7eH+5B63yB/32BI5hQPuRkarXfLOUePZDsTx1k6IkbobNfOIansml1KiGEjRJGU3DgOaec/f40uLTdvtywdLy4a9IKjg5/NG5XfnLTWyRmk0ktpRRghxx5xSXs61H1dDzuRHHPpy2fu8N1Uob/O432m393u080t43jpKyl7GuPmN1rCaIUJpaJIL/nby+5N/83VWHIniORD2MKDQXl1gQvm8AeMTmTtUZMynMcy02hqEYWBmAVJMWaAd1kxVSGH9a5vZ4/boeT0jX5dgx2+ZXAAAA//8CNt+v2wIAAA=="
        },
        "mode": 509
      },
      {
        "path": "/home/rancher/more.sh",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/6yUwWvbMBTG7/4r3ugh7YYs13GTGpZASVfYodvoBruEGUV6qbXIkpHkhO6wv324dpp1LKRU8cHY0vf93vf0QCdv6EJqumCujJCXBgbONJYjvD9dNQvkXgE3Va3QS6OhlZ0NYDr9TeP22/JojwqmQEtTIbVM8xIt7XWRa4SBav3/XaDo+WOYYseLxZO5S8iUZA5Wk371eZ5O0rsRyA0UhfPM+mJbY/XcEJ3A0ljwVgrUHmZfP3YZHQogEgaO/pifaiMwduhcm4c1vox5yeqCqXs3P4vf0vk5TOD2+oIOuhak4052bxFzo5eHmI4zvSNVTDdMHYBVNfNl+wuEoGYLhUDIRvqyqBrlZbsr4AEIWUotdmsOdNSneXAeq/ZIevtSWtwwpUTs0K4lxz06QrTZQBcIdsX+VVt8PPhOuEX+pX95lT7wNh/hlQBCarQV0+3QCPllNE6E4Su0QAgTgtTG+kmaUs/r17ovkxB3lg1D7OlwPAr052H+sPZHgf1fZuOUNuLV/jzJg/rPh9lFiP88SS+SUEAWAhgmSZKQYToejY+FaedxkCOkRe57hG0UgqzXGSyl8mjh5vPd96u7a8hzIAY4U/IdkJ9wNZt9+PLtiGz5Ivaxsx47n0VlmIj2Xa0Hb+ytsBvrIdUn9BtjV7dMs3u08PR0eosLY3z0JwAA//+EsB8bMwgAAA=="
        },
        "mode": 509
      },
      {
        "path": "/home/rancher/rke2.sh",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/6yUPY/UMBCG+/yKQdRjH6ejAGkbqJCugpZm4sxufOvYwTO50yJ+PMonSVghFtHsJvHrZ75e+/UrW/poS5K6cF0OgHJ8hFq1lffWnlhNPvO98Ql+gHRVAqkBi/HpIsqN0wAcqQwMvRKF8zNn0/95x3ulKGW9LgzMLTw83BVFzaGBzG0CqirIFF3NGQMpiy6pZQ5MwmKmdeNSY0cmupqyih13jLgjq6t3LDu97gI+sYqSOy+hRpyZvxufVju6tiLldZBZZx1nxYYinTgD4jNn8SnC8xtzb+6Kc1dy3xLE4SnFoz+BZXVzWrZv0/BjLtQEcJlJGSI1LC05hjV/TEC5afvaNktgNpngGN/o6Tsgpk7bTrHyGQx8LQAAEK+HWJaFFXxDJzZ9B8RrypfDt44uxid7tXp0KWpOIewoL1zWKZ3NjbRp2wblyMcndpryrbRfO6cT8AiYNpXv9LkaB7KcEq91Vw4GvBph8aqt0ksMiSo7zmCjMi5XMoBvtwa1bbgAHv8i63+Gf/6NP7tNbFH8DzuTamAcL4udnycGmJmG9+atefdHEyfsTSLXXL2OtHFRnUR73WG+VUJyFPqvW7Nx1nls07E+DBPdqCbGp96Oh6ULUyVrYSf8oYtV4OrLkNLH/sI5aO749rZi3JW3Ht/SvuJnAAAA///DjiDA+AUAAA=="
        },
        "mode": 509
      },
      {
        "path": "/etc/rancher/rke2/config.yaml",
        "contents": {
          "source": "data:,selinux%3A%20false%20%23%20selinux%20is%20currently%20not%20working%0Awrite-kubeconfig-mode%3A%20%220644%22%0Adisable-cloud-controller%3A%20true%0A"
        },
        "mode": 511
      },
      {
        "path": "/etc/NetworkManager/conf.d/rke2-canal.conf",
        "contents": {
          "source": "data:,%5Bkeyfile%5D%0Aunmanaged-devices%3Dinterface-name%3Acali*%3Binterface-name%3Aflannel*"
        },
        "mode": 384
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "enabled": false,
        "mask": true,
        "name": "podman.service"
      },
      {
        "enabled": true,
        "name": "docker.service"
      },
      {
        "enabled": false,
        "mask": true,
        "name": "zincati.service"
      },
      {
        "enabled": false,
        "mask": true,
        "name": "rpm-ostree-countme.timer"
      },
      {
        "contents": "[Unit]\nDescription=Refresh Repo Metadata\n# We run after `systemd-machine-id-commit.service` to ensure that\n# `ConditionFirstBoot=true` services won't rerun on the next boot.\nAfter=systemd-machine-id-commit.service\nAfter=network-online.target\n# We run before `zincati.service` to avoid conflicting rpm-ostree\n# transactions.\nBefore=zincati.service\nConditionPathExists=!/var/lib/%N.stamp\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/rpm-ostree refresh-md\nExecStart=/bin/touch /var/lib/%N.stamp\nExecStart=/bin/systemctl --no-block reboot\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "rpm-ostree-refresh-md.service"
      }
    ]
  }
}
